name: CI

on:
  - push

jobs:
  testing:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Run tests
        run: pytest -v .

  linting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Linting by isort
        id: isort_lint
        run: isort --check --diff --color .

      - name: Linting by ruff
        id: ruff_lint
        run: ruff check .

      - name: Linting by mypy
        id: mypy_lint
        run: mypy --color-output .

  release:
    # see at https://python-semantic-release.readthedocs.io/en/latest/automatic-releases/github-actions.html#example-workflow
    runs-on: ubuntu-20.04
    needs: [testing, linting]
    concurrency: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build

      - name: Create Python Sematic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
