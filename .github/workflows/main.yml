name: CI

on:
  - push

jobs:
  testing:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Run tests
        run: pytest -v .

  linting:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Linting by isort
        id: isort_lint
        run: |
          isort --check --diff --color .
          echo "isort_result=$?" >> $GITHUB_OUTPUT

      - name: Linting by ruff
        id: ruff_lint
        run: |
          ruff check .
          echo "ruff_result=$?" >> $GITHUB_OUTPUT

      - name: Linting by mypy
        id: mypy_lint
        run: |
          mypy --color-output .
          echo "mypy_result=$?" >> $GITHUB_OUTPUT

      - name: Check linting results
        env:
          isort_result: ${{ steps.isort_lint.outputs.isort_result }}
          ruff_result: ${{ steps.ruff_lint.outputs.ruff_result }}
          mypy_result: ${{ steps.mypy_lint.outputs.mypy_result }}
        run: |
          if [[ isort_result -eq  '0' && ruff_result -eq '0' && mypy_result -eq '0' ]]; then
            echo 'Ok'
            exit 0
          else
            echo 'Fail'
            exit 1
          fi
